$ fq -rRs 'fromjson[] | (to_jq | ., from_jq), "----", (to_jq({indent:2}) | ., from_jq), "----"' variants.json
null
null
----
null
null
----
true
true
----
true
true
----
false
false
----
false
false
----
123
123
----
123
123
----
123.123
123.123
----
123.123
123.123
----
"string"
string
----
"string"
string
----
[1,2,3]
[
  1,
  2,
  3
]
----
[
  1,
  2,
  3
]
[
  1,
  2,
  3
]
----
{array:[true,false,null,1.2,"string",[1.2,3],{a:1}],"escape \\\"":456,false:false,null:null,number:1.2,object:{a:1},string:"string",true:true,"white space":123}
{
  "array": [
    true,
    false,
    null,
    1.2,
    "string",
    [
      1.2,
      3
    ],
    {
      "a": 1
    }
  ],
  "escape \\\"": 456,
  "false": false,
  "null": null,
  "number": 1.2,
  "object": {
    "a": 1
  },
  "string": "string",
  "true": true,
  "white space": 123
}
----
{
  array: [
    true,
    false,
    null,
    1.2,
    "string",
    [
      1.2,
      3
    ],
    {
      a: 1
    }
  ],
  "escape \\\"": 456,
  false: false,
  null: null,
  number: 1.2,
  object: {
    a: 1
  },
  string: "string",
  true: true,
  "white space": 123
}
{
  "array": [
    true,
    false,
    null,
    1.2,
    "string",
    [
      1.2,
      3
    ],
    {
      "a": 1
    }
  ],
  "escape \\\"": 456,
  "false": false,
  "null": null,
  "number": 1.2,
  "object": {
    "a": 1
  },
  "string": "string",
  "true": true,
  "white space": 123
}
----
[]
[]
----
[]
[]
----
{}
{}
----
{}
{}
----
$ fq -i
null> `"\(123)"` | from_jq
error: from_jq only supports constant literals: string interpolation
null> `if true then 123 else false end` | from_jq
error: from_jq only supports constant literals: unsupported term TermTypeIf
null> ^D
